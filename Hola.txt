using System;
using System.Collections.Generic;
using Microsoft.SharePoint.Client;
using Newtonsoft.Json.Linq;
using System.Net;
using System.Security;
using System.Web.Script.Serialization;

namespace SharePoint_test
{
    class Program
    {
        static void Main(string[] args)
        {
            var webUri = new Uri("https://softtekssh.sharepoint.com/sites/Academia/Testing/Grupo1");
            const string userName = "smo-sitiodeprueba@softtekssh.onmicrosoft.com";
            const string password = "Softtek2017!";
            var securePassword = new SecureString();
            foreach (var c in password)
            {
                securePassword.AppendChar(c);
            }
            var credentials = new SharePointOnlineCredentials(userName, securePassword);

            var list = GetList(webUri, credentials, "ProfesionalCompleto");
            var list2 = GetList(webUri, credentials, "Especialidades");
            var list3 = GetList(webUri, credentials, "SucursalesLista");
            List<Doctor> listaDocs = new List<Doctor>();
            //print List title

            foreach (var g in list3)
            {
                Console.WriteLine(g["Title"]);
                
            }
            Console.WriteLine(" ");
            IEnumerable<JToken> b = list;
            foreach (var g in list2)
            {
                Console.WriteLine(g["Title"]);

            }
            Console.WriteLine(" ");
            foreach (var a in b)
            {
                
                Doctor docAgregado = new Doctor();
                docAgregado.NombreCompleto = a["Title"].ToString();
                docAgregado.Especialidad = a["Especialidad"].ToString();
                docAgregado.Dias = a["DiasDeAtencion"].ToString();
                docAgregado.HoraEntrada = int.Parse(a["HoraEntrada"].ToString());
                docAgregado.HoraSalida = int.Parse(a["HoraSalida"].ToString());
                listaDocs.Add(docAgregado);
                /*Console.Write(a["Title"]);
                Console.Write("----");
                Console.Write(a["Especialidad"]);
                Console.Write("----");
                Console.Write(a["DiasDeAtencion"]);
                Console.Write("----");
                Console.Write(a["HoraEntrada"]);
                Console.Write("----");
                Console.Write(a["HoraSalida"]);
                Console.WriteLine(" ");*/
            }

            foreach (var doc in listaDocs)
            {
                Console.WriteLine(doc.ToString());
            }
            //Console.WriteLine();
            Console.ReadKey();
            //IEnumerable<JToken> d = b.Children 
            /*foreach (var a in b)
            {
                foreach(var z in a)
                {
                    Console.WriteLine(z["Especialidad"]);
                }

            }
            Console.WriteLine(list["Title"]);*/
            Console.ReadLine();
        }

        public static JToken GetList(Uri webUri, ICredentials credentials, string listTitle)
        {
            using (var client = new WebClient())
            {
                client.Headers.Add("X-FORMS_BASED_AUTH_ACCEPTED", "f");
                client.Credentials = credentials;
                client.Headers.Add(HttpRequestHeader.ContentType, "application/json;odata=verbose");
                client.Headers.Add(HttpRequestHeader.Accept, "application/json;odata=verbose");
                string u = webUri + string.Format("/_api/web/lists/getbytitle('{0}')/items", listTitle);
                var endpointUri = new Uri(u);
                var result = client.DownloadString(endpointUri);
                var t = JToken.Parse(result);
                return t["d"]["results"];
            }
        }
    }
    public class Doctor
    {
        public string NombreCompleto { get; set; }
        public string Especialidad{ get; set; }
        public string Dias{ get; set; }
        public int HoraEntrada{ get; set; }
        public int HoraSalida { get; set; }

        public override string ToString()
        {
            return "Nombre y Apellido : " + this.NombreCompleto + " Especialidad: " + this.Especialidad + " Dias que trabaja: " + this.Dias + " Horarios: " + this.HoraEntrada + " a " + this.HoraSalida;
        }
    }
}
